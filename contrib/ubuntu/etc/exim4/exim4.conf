### EXIM
### Mysql flags description:
#00000001 (flags&1) - mailbox enabled
#00000010 (flags&2) - remote access enabled
#00000100 (flags&4) - HELO checks disabled
#00001000 (flags&8) - spamd checks disabled

MAIN_QUALIFY_DOMAIN=fakedomain.tld
MAIN_PRIMARY_HOSTNAME=mx0.fakedomain.tld
MAIN_PRIMARY_HOSTNAME_INTERFACE=1.1.1.1

MM_HOME=/usr/local/mailman
MM_UID=mail
MM_GID=mail
MM_WRAP=MM_HOME/mail/mailman
MM_LISTCHK=MM_HOME/lists/${lc::$local_part}/config.pck
domainlist mm_domains=MAIN_QUALIFY_DOMAIN


USERHOME=/var/vmail

primary_hostname = MAIN_PRIMARY_HOSTNAME
smtp_banner="Welcome to SMTP!"
add_environment = <; PATH=/bin:/usr/bin

daemon_smtp_ports = 25:465
tls_on_connect_ports = 465
tls_advertise_hosts = *
tls_certificate = /etc/ssl/fakedomain.tld/fullchain.crt
tls_privatekey = /etc/ssl/fakedomain.tld/wildcard.fakedomain.tld.key

smtp_receive_timeout = 5m
smtp_accept_max = 350
smtp_accept_max_per_connection = 50
smtp_accept_max_per_host = 25
smtp_max_unknown_commands = 3

#smurov
#################
#remote_max_parallels = 25
split_spool_directory = true
smtp_enforce_sync = true
#################
#smurov

hide mysql_servers = localhost/maildb/mailnull/1234567890

domainlist local_domains = ${lookup mysql{SELECT domain FROM admindb_domains WHERE domain='${domain}' \
AND (type='LOCAL' OR type='VIRTUAL')}} : @mx_primary : @[MAIN_PRIMARY_HOSTNAME_INTERFACE]
domainlist relay_to_domains = ${lookup mysql{SELECT domain FROM admindb_domains WHERE domain='${domain}' AND type='RELAY'}}

hostlist relay_from_hosts = <; 127.0.0.1 ; ::1 ; 10.0.0.0/8 ; 172.16.0.0/12 ; 192.168.0.0/16

auth_advertise_hosts = *

hostlist helo_accept_junk_hosts = *
#192.6.76.85 : 213.130.10.2 : 62.221.44.212 : 217.199.228.226 : 193.201.61.146 : 80.254.0.8

acl_smtp_rcpt = acl_check_rcpt
acl_smtp_data = acl_check_data
acl_smtp_auth = acl_check_auth

av_scanner = clamd:/var/run/clamav/clamd.ctl
#local_scan_path = /usr/lib/exim4/local_scan/sa-exim.so
#spamd_address = /var/run/spamd_socket
spamd_address = 127.0.0.1 783
#system_filter = /usr/local/etc/exim/filter
sender_unqualified_hosts = 
qualify_domain = MAIN_QUALIFY_DOMAIN

exim_user = mail
exim_group = mail

never_users = 

host_lookup = !192.168.0.0/16 : !10.0.0.0/8

rfc1413_hosts = *
rfc1413_query_timeout = 5s

ignore_bounce_errors_after = 1d
timeout_frozen_after = 7d

message_size_limit = 500M

helo_try_verify_hosts = *

### ACL CONFIGURATION

begin acl

acl_check_rcpt:

	deny    senders = lsearch*@;/etc/exim4/bl_domains
		
	deny	local_parts = spam : reports
		domains = $qualify_domain
		! hosts = +relay_from_hosts

	accept	local_parts = postmaster
		domains	= +local_domains

	warn 	set acl_c1 =
        	set acl_c1 = ${lookup dnsdb{a=$domain}{$value}}

	accept	local_parts = postmaster
        	condition = ${if eq{$acl_c1}{$interface_address} {yes}{no}}

	accept	condition = ${if eq{} {${lookup mysql{SELECT concat('USERHOME','/',domain_id,'/',localpart) as home FROM admindb_users WHERE localpart='${local_part}' AND domain_id='${domain}' AND enabled AND remote_access}}}{no}{yes}}

	warn 	set acl_c0 =
        	set acl_c0 = ${lookup dnsdb{a=$sender_helo_name}{$value}}

        drop 	message = Forged hostname detected in HELO/EHLO (it's mine) - $sender_helo_name
		hosts = !+relay_from_hosts
		log_message = Inadmissible HELO/EHLO! Host "$sender_host_name" used my hostname "$sender_helo_name" as HELO/EHLO!
        	condition = ${if eq{$acl_c0}{$interface_address} {yes}{no}}

	deny	local_parts = ^.*[@%!/|] : ^\\.

	accept  authenticated = *
#		endpass
#		verify = recipient
                control = submission/sender_retain

	accept  hosts = +relay_from_hosts
#		endpass
#		verify = recipient
		control = submission/sender_retain

	warn	message = Inadmissible HELO/EHLO - $sender_helo_name! Correct your HELO/EHLO string!
		log_message = Inadmissible HELO/EHLO! Host "$sender_helo_name" didn't pass helo_try_verify_hosts check!
		! verify = helo
		! hosts = +helo_accept_junk_hosts
		! condition = ${if match{$sender_host_name}{hotmail\.com|mail\.ru}{yes}{no}} 
                delay = 30s

	warn	message = Sender address $sender_address does not exist! Correct sender name!
		! verify = sender/callout
		log_message = Sender address does not exist - $sender_address!
                delay = 30s

	drop	message = Inadmissible host name - $sender_host_name, try to use your ISP MTA!
		hosts = !+relay_from_hosts
		log_message = Inadmissible host name! "$sender_host_name" tried to relay!
		condition = ${if match{$sender_host_name}{dialin|ppp|dialup|dsl|catv|pool|peer|dhcp|dynamic}{yes}{no}}

	drop	message = Inadmissible HELO/EHLO - $sender_helo_name. You gave me an IP, I want your name!
		hosts = !+relay_from_hosts
		log_message = Inadmissible HELO/EHLO! MTA gave me an IP "$sender_helo_name" in HELO/EHLO.
		condition    = ${if isip {$sender_helo_name}{yes}{no}}

#	deny	message = Host $sender_host_name is listed in $dnslist_domain
#		log_message = Host $sender_host_name is listed in $dnslist_domain
#		dnslists = sbl.spamhaus.org : \
#		relays.ordb.org : \
#		opm.blitzed.org : \
#		proxies.blackholes.easynet.nl

	accept 	domains = +local_domains
		endpass
		message = Unknown user
		verify = recipient

	accept 	condition = ${if eq{$acl_c1}{$interface_address} {yes}{no}}
		endpass
		message = Unknown user
		verify = recipient

	accept 	domains = +relay_to_domains
		endpass
		message = Unrouteable address
		verify = recipient

	deny message = Sorry, relay not permitted

acl_check_auth:
	accept  hosts = +relay_from_hosts
#	accept hosts = *
	accept encrypted = *
	accept condition = ${if eq{${uc:$smtp_command_argument}}{CRAM-MD5}{yes}{no}}
	deny message = Encrytped connection or CRAM-MD5 for smtp authentication is mandatory! Please enable TLS/SSL support in your mailclient in order to relay to this host.

acl_check_data:
	deny	message   = This message contains a virus ($malware_name).
		hosts     = +relay_from_hosts
		condition = ${if < {$message_size}{10M}}
		malware   = *
	accept	hosts = +relay_from_hosts
	accept	authenticated = *
        warn	condition = ${if < {$message_size}{10M}}
		spam = nobody
		add_header = Subject: ***SPAM (score:$spam_score)*** $h_Subject:
        warn	message = X-MIME-Error: $demime_reason
              demime = *
              condition = ${if >{$demime_errorlevel}{0}{1}{0}}
              set acl_m_greylistreasons = Message has MIME error: $demime_reason\n$acl_m_greylistreasons
        warn  condition = ${if and {                                  \
                              {match {${lc:$h_subject:}}{^re:}}       \
                              {!def:h_References:}                    \
                              {!def:h_In-Reply-To:}                   \
                           } {1}{0}}
              message = X-Bad-Reply: 'Re:' in Subject but no References or In-Reply-To headers
              set acl_m_greylistreasons = Message has 'Re:' in Subject: but neither References: nor In-Reply-To:\n$acl_m_greylistreasons
        warn condition = ${if !def:h_Message-ID: {1}}
              set acl_m_greylistreasons = Message has no Message-Id: header\n$acl_m_greylistreasons
        warn condition = ${if >{$spam_score_int}{0} {1}}
             set acl_m_greylistreasons = Message has $spam_score SpamAssassin points\n$acl_m_greylistreasons
        warn dnslists = psbl.surriel.org
             set acl_m_greylistreasons = Host listed in $dnslist_domain blacklist: $dnslist_text\n$acl_m_greylistreasons
        warn !condition = $mime_is_rfc822
              condition = $mime_is_coverletter
              condition = ${if eq{$mime_content_type}{text/html} {1}}
              set acl_m_greylistreasons = Message appears to have HTML content, not just plain text.\n$acl_m_greylistreasons
        warn set acl_m_greylistreasons = Sender is new to me\n$acl_m_greylistreasons
#       warn  senders = boss@bigcorp.com
#             set acl_m_greylistreasons =
#
#       warn dnslists = list.dnswl.org
#            set acl_m_greylistreasons =
	deny	message   = This message contains a virus ($malware_name).
		condition = ${if < {$message_size}{10M}}
		malware   = *
        require acl = greylist_mail
        accept
.include /etc/exim4/acl-greylist-sqlite

### ROUTERS CONFIGURATION

begin routers


dnslookup:
	driver = dnslookup
	domains = !+local_domains
#	condition = ${if eq{lookup dnsdb{a=$domain}{'193.254.232.1'}}{no}{yes}}
	transport = remote_smtp
	ignore_target_hosts = 0.0.0.0 : 127.0.0.0/8
	no_more

forwards:
	driver = redirect
	domains = +local_domains
	allow_fail
	allow_defer
	data = ${lookup mysql{select group_concat(concat(if(recipient_localpart='','${local_part}',\
	recipient_localpart),'@',recipient_domain)) from admindb_forwards where if(localpart='','${local_part}',\
	localpart)='${local_part}' and if(domain='','${domain}',domain)='${domain}' group by \
	priority order by priority limit 1}}

system_aliases:
	driver = redirect
	domains = +local_domains
	allow_fail
	allow_defer
	data = ${lookup mysql{SELECT recipients FROM admindb_aliases WHERE localpart='${local_part}' AND \
	domain_id='${domain}'}}

virtualuser:
	driver = accept
	domains = +local_domains
	condition = ${if eq{} {${lookup mysql{SELECT concat('USERHOME','/',domain_id,'/',localpart) as home \
	FROM admindb_users WHERE localpart='${local_part}' AND domain_id='${domain}' AND enabled}}}{no}{yes}}
#	transport = local_vmail
	transport = dovecot_lda

mailman_router:
	driver = accept
	domains = +local_domains
	require_files = MM_LISTCHK
	local_part_suffix_optional
	local_part_suffix = -admin : -bounces : -bounces+* : -confirm : -confirm+* : -join : -leave : \
	-owner : -request : -subscribe : -unsubscribe
	transport = mailman_transport

### TRANSPORTS CONFIGURATION

begin transports

# This transport is used for delivering messages over SMTP connections.

remote_smtp:
  driver = smtp
  interface = 1.1.1.1

# This transport is used for local delivery to user mailboxes in traditional
# BSD mailbox format. By default it will be run under the uid and gid of the
# local user, and requires the sticky bit to be set on the /var/mail directory.
# Some systems use the alternative approach of running mail deliveries under a
# particular group instead of using the sticky bit. The commented options below
# show how this can be done.

local_delivery:
  driver = appendfile
  file = /var/mail/$local_part
  delivery_date_add
  envelope_to_add
  return_path_add
  group = mail
  user = $local_part
  mode = 0660
  no_mode_fail_narrower

# This transport is used for handling pipe deliveries generated by alias or
# .forward files. If the pipe generates any standard output, it is returned
# to the sender of the message as a delivery error. Set return_fail_output
# instead of return_output if you want this to happen only when the pipe fails
# to complete normally. You can set different transports for aliases and
# forwards if you want to - see the references to address_pipe in the routers
# section above.

address_pipe:
  driver = pipe
  return_output

# This transport is used for handling deliveries directly to files that are
# generated by aliasing or forwarding.

address_file:
  driver = appendfile
  delivery_date_add
  envelope_to_add
  return_path_add


# This transport is used for handling autoreplies generated by the filtering
# option of the userforward router.

address_reply:
  driver = autoreply

dovecot_lda:
	driver          = pipe
	command         = /usr/lib/dovecot/deliver -d $local_part@$domain
	group = mail
	user = mail
	message_prefix = ""
	message_suffix = ""
	return_path_add
	delivery_date_add
	envelope_to_add
	log_output

local_vmail:
	driver = appendfile
	check_string = ""
	create_directory
	delivery_date_add
	directory = ${lookup mysql{SELECT concat('USERHOME','/',domain_id,'/',localpart) as home \
	FROM admindb_users WHERE localpart='${local_part}' AND domain_id='${domain}' AND enabled}}
	directory_mode = 770
	envelope_to_add
	group = mail
	maildir_format
	maildir_tag = ,S=$message_size
	message_prefix = ""
	message_suffix = ""
	mode = 0600
	quota = ${lookup mysql{SELECT quota FROM admindb_users WHERE localpart='${local_part}' AND domain_id='${domain}'}{${value}M}}
	quota_size_regex = S=(\d+)$
	quota_warn_threshold = 95%
	return_path_add

spam:
	driver = appendfile
	check_string = ""
	create_directory
	delivery_date_add
	directory = /var/vmail/$qualify_domain/spam
	directory_mode = 770
	envelope_to_add
	group = mail
	maildir_format
	maildir_tag = ,S=$message_size
	message_prefix = ""
	message_suffix = ""
	mode = 0600
	return_path_add

mailman_transport:
	driver = pipe
	command = MM_WRAP \
		'${if def:local_part_suffix {${sg{$local_part_suffix}{-(\\w+)(\\+.*)?}{\$1}}} \
		{post}}' $local_part
	current_directory = MM_HOME
	home_directory = MM_HOME
	user = MM_UID
	group = MM_GID

### RETRY CONFIGURATION

begin retry

# This single retry rule applies to all domains and all errors. It specifies
# retries every 15 minutes for 2 hours, then increasing retry intervals,
# starting at 1 hour and increasing each time by a factor of 1.5, up to 16
# hours, then retries every 6 hours until 4 days have passed since the first
# failed delivery.

# Address or Domain    Error       Retries
# -----------------    -----       -------
# *			quota_3d	F,1s,1s	
*			quota		F,1m,1m	
*			*		F,2h,15m; G,16h,1h,1.5; F,2d,6h


### REWRITE CONFIGURATION

begin rewrite


### AUTHENTICATION CONFIGURATION

begin authenticators

#select encrypt('123456789', (SELECT password FROM users where login='localpart@fakedomain.tld')) as hash;
#crypteq

#auth_plain:
#	driver = plaintext
#	public_name = PLAIN
#	server_condition = ${lookup mysql{SELECT localpart FROM admindb_users \
#	WHERE localpart = '${quote_mysql:${local_part:$auth2}}' AND \
#	domain_id = if('${quote_mysql:${domain:$auth2}}'='','$qualify_domain','${quote_mysql:${domain:$auth2}}') \
#	AND passwd = encrypt('${quote_mysql:$auth3}', (SELECT passwd FROM admindb_users WHERE \
#        localpart = '${quote_mysql:${local_part:$auth2}}' AND domain_id = \
#        if('${quote_mysql:${domain:$auth2}}'='','$qualify_domain','${quote_mysql:${domain:$auth2}}'))) \
#        AND enabled AND remote_access}{yes}{no}}
#	server_prompts = :
##	server_advertise_condition = ${if eq{$tls_cipher}{}{no}{yes}}
#	server_set_id = $auth2
#
#auth_login:
#	driver = plaintext
#	public_name = LOGIN
#	server_condition = ${lookup mysql{SELECT localpart FROM admindb_users WHERE localpart = \
#	'${quote_mysql:${local_part:$auth1}}' AND domain_id = \
#	if('${quote_mysql:${domain:$auth1}}'='','$qualify_domain','${quote_mysql:${domain:$auth1}}') AND \
#	passwd = '${quote_mysql:$auth2}' AND enabled AND remote_access}{yes}{no}}
#	server_prompts = Username:: : Password::
#	server_advertise_condition = ${if eq{$tls_cipher}{}{no}{yes}}
#	server_set_id = $auth1
#
#auth_cram_md5:
#	driver = cram_md5
#	public_name = CRAM-MD5
#	server_secret = ${lookup mysql{SELECT passwd FROM admindb_users WHERE localpart = \
#	'${quote_mysql:${local_part:$auth1}}' AND domain_id = if('${quote_mysql:${domain:$auth1}}'='',\
#	'$qualify_domain','${quote_mysql:${domain:$auth1}}') AND enabled AND remote_access}{$value}fail}
#	server_set_id = $auth1
#
#spa:
#	driver = spa
#	public_name = NTLM
#	server_password = ${lookup mysql{SELECT passwd FROM admindb_users WHERE localpart = \
#	'${quote_mysql:${local_part:$auth1}}' AND domain_id = if('${quote_mysql:${domain:$auth1}}'='',\
#	'$qualify_domain','${quote_mysql:${domain:$auth1}}') AND enabled AND remote_access}{$value}fail}
#	server_set_id = $auth1
auth_plain:
	driver = dovecot
	server_condition = ${lookup mysql{SELECT localpart FROM admindb_users WHERE localpart = \
	'${quote_mysql:${local_part:$auth1}}' AND domain_id = \
	if('${quote_mysql:${domain:$auth1}}'='','$qualify_domain','${quote_mysql:${domain:$auth1}}') \
	AND enabled AND remote_access}{yes}{no}}
	public_name = PLAIN
	server_socket = /var/run/dovecot/auth-client
	server_set_id = $auth1

auth_login:
	driver = dovecot
	public_name = LOGIN
	server_condition = ${lookup mysql{SELECT localpart FROM admindb_users WHERE localpart = \
	'${quote_mysql:${local_part:$auth1}}' AND domain_id = \
	if('${quote_mysql:${domain:$auth1}}'='','$qualify_domain','${quote_mysql:${domain:$auth1}}') AND \
	enabled AND remote_access}{yes}{no}}
	server_socket = /var/run/dovecot/auth-client
	server_set_id = $auth1

auth_cram_md5:
	driver = dovecot
	public_name = CRAM-MD5
	server_condition = ${lookup mysql{SELECT localpart FROM admindb_users WHERE localpart = \
	'${quote_mysql:${local_part:$auth1}}' AND domain_id = \
	if('${quote_mysql:${domain:$auth1}}'='','$qualify_domain','${quote_mysql:${domain:$auth1}}') AND \
	enabled AND remote_access}{yes}{no}}
	server_socket = /var/run/dovecot/auth-client
	server_set_id = $auth1
